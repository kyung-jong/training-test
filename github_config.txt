Git Bash 실행

git config --global user.name "이름"

git config --global user.email "이메일"

git config --list 로 name, email 확인



--------------------------------

git init
git add .
git status
git commit -m "test"
git remote add origin https://github.com/kyung-jong/training-test.git
git remote -v
git push origin master


삭제된 파일은
git rm "파일명"


--------------------------------------------------------------------

Git은 분산 버전 관리 시스템으로, 프로젝트의 소스 코드를 효과적으로 관리하고 추적할 수 있는 도구입니다. 다음은 몇 가지 기본적인 Git 명령어입니다.

저장소 생성 및 설정:

git init: 새로운 Git 저장소를 생성합니다.
git clone [url]: 원격 저장소를 로컬로 복제합니다.
작업 영역과 스테이징:

git status: 현재 작업 디렉토리의 상태를 확인합니다.
git add [파일]: 변경 사항을 스테이징 영역에 추가합니다.
git add . 또는 git add --all: 모든 변경 사항을 스테이징 영역에 추가합니다.
git reset [파일]: 스테이징 영역에서 파일을 제거합니다.
커밋:

git commit -m "커밋 메시지": 스테이징 영역에 있는 변경 사항을 커밋합니다.
git commit -am "커밋 메시지": 모든 변경 사항을 스테이징하고 커밋합니다.
브랜치:

git branch: 현재 브랜치 목록을 보여줍니다.
git branch [새로운 브랜치 이름]: 새로운 브랜치를 생성합니다.
git checkout [브랜치 이름]: 다른 브랜치로 전환합니다.
git merge [다른 브랜치]: 현재 브랜치에 다른 브랜치의 변경 사항을 병합합니다.
원격 저장소와 연동:

git remote add [원격 저장소 이름] [원격 저장소 URL]: 원격 저장소를 추가합니다.
git push [원격 저장소] [로컬 브랜치]: 로컬 변경 사항을 원격 저장소로 전송합니다.
git pull [원격 저장소] [로컬 브랜치]: 원격 저장소에서 변경 사항을 가져와 병합합니다.
로그 및 이력 조회:

git log: 커밋 이력을 확인합니다.
git log --oneline: 간단한 형식으로 커밋 이력을 확인합니다.
git diff: 작업 디렉토리와 스테이징 영역 또는 커밋 간의 차이를 보여줍니다.

